package com.abror.diplom.utils;

import android.app.ProgressDialog;
import android.content.Context;

import com.abror.diplom.R;
import com.abror.diplom.data.Glossary;
import com.abror.diplom.data.Presentation;
import com.abror.diplom.data.Test;
import com.abror.diplom.data.Variant;

import java.util.ArrayList;

public class Constants {

    public static String[] groups = {
            "618-15",
            "617-15",
            "652-15",
            "632-15",
            "617-17",
            "618-17"
    };

    public static String[] courses = {
            "1 - курс",
            "2 - курс",
            "3 - курс",
            "4 - курс"
    };

    public static ProgressDialog initProgressDialog(Context context, String text) {
        ProgressDialog progressDialog = new ProgressDialog(context);
        progressDialog.setCanceledOnTouchOutside(false);
        progressDialog.setMessage(text);
        return progressDialog;
    }

    public static ArrayList<Presentation> getPresentationData() {
        ArrayList<Presentation> dataList = new ArrayList<>();

        dataList.add(new Presentation("lecture_1", "Введение. Основные характеристики средств, методов и механизмов обеспечения безопасности баз данных"));
        dataList.add(new Presentation("lecture_2", "Виды систем управления базами данных и их целостность"));
        dataList.add(new Presentation("lecture_3", "Технологические аспекты информационной безопасности, языки безопасности баз данных"));
        dataList.add(new Presentation("lecture_4", "Модели и методы разграничения доступа в базы данных"));
        dataList.add(new Presentation("lecture_5", "Организация разграничения доступа в базы данных на основе дискреционной модели"));
        dataList.add(new Presentation("lecture_6", "Модели безопасности на основе ролевой политики"));
        dataList.add(new Presentation("lecture_7", "Администрирование и эксплуатация компьютерных систем"));
        dataList.add(new Presentation("lecture_8", "Безопасность базы данных в централизованных многопользовательских информационных системах, технология объектного связывания данных"));
        dataList.add(new Presentation("lecture_9", "Аудит безопасности и резервное базы данных"));
        dataList.add(new Presentation("lecture_10", "Особенности аудита безопасности в системах управления базами данных"));
        dataList.add(new Presentation("lecture_11", "Восстановление базы данных, процесс синхронизаций репликации в современных системах управления базами данных"));
        dataList.add(new Presentation("lecture_12", "Механизмы обеспечения целостности данных, реализуемые реляционными СУБД"));
        dataList.add(new Presentation("lecture_13", "Защита баз данных"));

        return dataList;
    }

    public static ArrayList<Glossary> getGlossaryData(Context context) {
        ArrayList<Glossary> glossaries = new ArrayList<>();

        glossaries.add(new Glossary("<b>АИС</b> – автоматизированные информационные системы."));
        glossaries.add(new Glossary("<b>БД</b> – база данних."));
        glossaries.add(new Glossary("<b>Быстрое внедрение</b> – (простая установка и настройка программ, быстрое обучение пользователей)."));
        glossaries.add(new Glossary("<b>Доступ</b> – Доступ субъекта к объекту для определенных операций."));
        glossaries.add(new Glossary("<b>ЗБ</b> – задание по безопасности."));
        glossaries.add(new Glossary("<b>Иерархические СУБД</b> – поддерживают древовидную организацию информации. Связи между записями выражаются в виде отношений предок/потомок, а у каждой записи есть ровно одна родительская запись. Это помогает поддерживать ссылочную целостность. Когда запись удаляется из дерева, все ее потомки также должны быть удалены."));
        glossaries.add(new Glossary("<b>ИТ</b> – информационные технологии."));
        glossaries.add(new Glossary("<b>Копирование образа жесткого диска</b> – это создание точной копии всего жесткого диска, что позволяет восстанавливать не только данные пользователя, но Windows и всю информацию о состоянии операционной системы, такую как данные системного реестра, драйверы, профили пользователей, системные настройки, программы и приложения."));
        glossaries.add(new Glossary("<b>Модель восстановления (recovery model)</b> – это параметр конфигурации базы данных, который управляет регистрацией транзакций, созданием резервных копий журнала транзакций и параметрами восстановления базы данных."));
        glossaries.add(new Glossary("<b>Модель полного восстановления</b> – означает, что ядро базы данных регистрирует в журнале транзакций все операции и никогда не выполняет усечение журнала."));
        glossaries.add(new Glossary("<b>Модель с неполным протоколированием</b> – означает, что ядро базы данных ведет минимальную регистрацию массовых операций, таких как SELECT INTO и BULKINSERT."));
        glossaries.add(new Glossary("<b>Мультиплексирование</b> – для увеличения отказоустойчивости СУБД может записывать одновременно несколько идентичных копий журнала изменений. Если в случае отказа одна из копий журнала окажется недоступной, СУБД восстановит базу данных используя любую из доступных копий. Такая стратегия называется мультиплексированием журнала изменений."));
        glossaries.add(new Glossary("<b>Надёжность хранения информации</b> – обеспечивается применением отказоустойчивого оборудования систем хранения, дублированием информации и заменой утерянной копии другой в случае уничтожения одной из копий (в т.ч. как часть отказоустойчивости)."));
        glossaries.add(new Glossary("<b>НСД</b> – несанкционированный доступ."));
        glossaries.add(new Glossary("<b>Объект</b> – Контейнер информации в системе."));
        glossaries.add(new Glossary("<b>ОДФ</b> – область действия ФБО."));
        glossaries.add(new Glossary("<b>ОК</b> – Общие критерии."));
        glossaries.add(new Glossary("<b>ОО</b> – объект оценки."));
        glossaries.add(new Glossary("<b>ОУД</b> – оценочный уровень доверия к безопасности."));
        glossaries.add(new Glossary("<b>ПБО</b> – политика безопасности объекта оценки."));
        glossaries.add(new Glossary("<b>ПЗ</b> – профиль защиты."));
        glossaries.add(new Glossary("<b>Под дифференциальным резервным копированием</b> – понимается копирование изменившейся информации со времени последнего полного бэкапа."));
        glossaries.add(new Glossary("<b>Полное копирование</b> – это копирование всех указанных данных целиком и полностью, будь то образ диска или файловая система, без учета изменений, произошедших в промежутках между копированиями."));
        glossaries.add(new Glossary("<b>Пользователь</b> – Человек выполняющий действия в системе или приложение, выступающее от его имени."));
        glossaries.add(new Glossary("<b>Простая модель восстановления</b> – регистрирует минимум данных о большинстве транзакций и выполняет усечение журнала транзакций после каждой контрольной точки.  Это  модель восстановления не поддерживает резервное копирование и восстановление журнала транзакций."));
        glossaries.add(new Glossary("<b>Простота в эксплуатации</b> – автоматизация (по возможности минимизировать участие человека: как пользователя, так и администратора)."));
        glossaries.add(new Glossary("<b>ПФБ</b> – политика функции безопасности."));
        glossaries.add(new Glossary("<b>РД</b> – руководящий документ."));
        glossaries.add(new Glossary("<b>Реляционные СУБД</b> – В сравнении с рассмотренными выше моделями реляционная модель требует от сервера СУБД гораздо более высокого уровня сложности. В ней делается попытка избавить программиста от выполнения рутинных операций по управлению данными, столь характерных для иерархической и сетевой моделей."));
        glossaries.add(new Glossary("<b>РРД</b> – ролевое разграничение доступа."));
        glossaries.add(new Glossary("<b>Сертификаты (certificates)</b> – являются самым надёжным механизмом шифрования из всех имеющихся. Сертификат открытого ключа представляет собой подписанную цифровой подписью инструкцию, которая связывает значение  открытого ключа с идентификатором пользователя, устройства или службы, имеющей соответствующий закрытый ключ."));
        glossaries.add(new Glossary("<b>Сетевые СУБД</b> – Сетевая модель расширяет иерархическую модель СУБД, позволяя группировать связи между записями в множества. С логической точки зрения связь — это не сама запись. Связи лишь выражают отношения между записями. Как и в иерархической модели, связи ведут от родительской записи к дочерней но на этот раз поддерживается множественное наследование."));
        glossaries.add(new Glossary("<b>СУБД</b> – система управления базой данных."));
        glossaries.add(new Glossary("<b>Субъект</b> – Сущность определяющая пользователя при работе в системе."));
        glossaries.add(new Glossary("<b>СФБ</b> – стойкость функции безопасности."));
        glossaries.add(new Glossary("<b>УК</b> – управление конфигурацией."));
        glossaries.add(new Glossary("<b>Файловое копирование</b> – это копирование файловой системы компьютера, то есть папок и файлов, хранящихся на компьютере. Такое копирование поможет восстановить папки и файлы пользователя, но не сможет вернуть систему в рабочее состояние."));
        glossaries.add(new Glossary("<b>ФБ</b> – функция безопасности."));
        glossaries.add(new Glossary("<b>ФБО</b> – функции безопасности объекта оценки."));

        return glossaries;
    }

    public static ArrayList<Variant> getAllTests() {
        int[] answers1 = {3, 3, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1};
        int[] answers2 = {0, 2, 0, 2, 2, 0, 2, 3, 3, 2, 1, 0, 3, 1, 2};
        int[] answers3 = {3, 0, 3, 2, 3, 1, 3, 2, 1, 0, 1, 3, 0, 1, 0};

        ArrayList<Variant> variants = new ArrayList<>();

        // Вариант 1
        ArrayList<Test> tests = new ArrayList<>();
        tests.add(new Test(
                "В дополнение к используемым элементам базовой модели РРД в модели администрирования РРД какие элементы рассматриваются?",
                new String[]{"множество административных ролей;  множество административных прав доступа",
                "функция, определяющая для каждой административной роли множество административных прав доступа",
                "функция, определяющая для каждого пользователя множество административных ролей, на которые он может быть авторизован",
                "все варианты правильны"}
        ));
        tests.add(new Test(
                "Основными элементами базовой модели РРД являются:",
                new String[]{"множество пользователей;  множество ролей",
                "множество прав доступа на объекты компьютерной системы",
                "множество сессий пользователей", "все варианты правильны"}
        ));
        tests.add(new Test(
           "Все сессии активизируется с помощью …",
                new String[]{"других сессий",
                "пользователями",
                "ролей",
                "нет правильного ответа"}
        ));
        tests.add(new Test(
                "Сколько ролей имеет иерархия административных ролей?",
                new String[]{"4", "3", "2", "5"}
        ));
        tests.add(new Test(
                "Покажите иерархии администрирование ролевой иерархии?",
                new String[]{"пользователи, сессии, роли",
                "разграничение, доступ к входу",
                "возможности, группы, объединение",
                "нет правильного ответа"}
        ));
        tests.add(new Test(
                "Что понимается под ролевые возможности?",
                new String[]{"множества пользователей, прав доступа, групп, возможностей и других объединений",
                "множества пользователей и других групп",
                "множества прав доступа и других возможностей",
                "нет правильного ответа"}
        ));
        tests.add(new Test(
                "В чём заключается аудит безопасности?",
                new String[]{"Аудит безопасности заключается в контроле и отслеживании событий в системе с целью выявления, своевременного обнаружения проблем или нарушений безопасности и сигнализации об этом администратору безопасности.",
                "Аудит безопасности - Для увеличения отказоустойчивости СУБД может записывать одновременно несколько идентичных копий журнала изменений.",
                "Аудит безопасности – это периодическое дублирование или создание запасных копий критически важных данных с целью их восстановления в случае потери оригинала.",
                "Все ответы правильные."}
        ));
        tests.add(new Test(
                "Что такое журнализация изменений?",
                new String[]{"Все ответы правильные.",
                "Журнализация изменений - функция СУБД, которая сохраняет информацию, необходимую для восстановления базы данных в предыдущее консистентное состояние в случае логических или физических отказов.",
                "Журнализация изменений заключается в последовательной записи во внешнюю память всех изменений, выполняемых в базе данных.",
                "Журнал изменений содержит отметки начала и завершения транзакции, и отметки принятия контрольной точки."}
        ));
        tests.add(new Test(
                "Что такое мультиплексирование?",
                new String[]{"Мультиплексирование - Для увеличения отказоустойчивости СУБД может записывать одновременно несколько идентичных копий журнала изменений.",
                "Мультиплексирование заключается в контроле и отслеживании событий в системе с целью выявления, своевременного обнаружения проблем или нарушений безопасности и сигнализации об этом администратору безопасности.",
                "Мультиплексирование – это периодическое дублирование или создание запасных копий критически важных данных с целью их восстановления в случае потери оригинала.",
                "Все ответы правильные."}
        ));
        tests.add(new Test(
                "Что такое резервное копирование?",
                new String[]{"Все ответы правильные.",
                "Резервное копирование – это периодическое дублирование или создание запасных копий критически важных данных с целью их восстановления в случае потери оригинала.",
                "Резервное копирование – это страхование от потери информации в случае поломки оборудования или случайного удаления файлов пользователем.",
                "Резервное копирование – это копирование файловой системы компьютера и копирование образа жесткого диска."}
        ));
        tests.add(new Test(
                "Что такое иерархические СУБД?",
                new String[]{"Иерархические СУБД – поддерживают древовидную организацию информации. Связи между записями выражаются в виде отношений предок/потомок, а у каждой записи есть ровно одна родительская запись.",
                "Иерархические СУБД – Сетевая модель расширяет иерархическую модель СУБД, позволяя группировать связи между записями в множества.",
                "Иерархические СУБД – В этой модели база данных представляет собой централизованное хранилище таблиц, обеспечивающее безопасный одновременный доступ к информации со стороны многих пользователей.",
                "Все ответы правильные."}
        ));
        tests.add(new Test(
                "Что такое сетевые СУБД?",
                new String[]{"Сетевые СУБД – Сетевая модель расширяет иерархическую модель СУБД, позволяя группировать связи между записями в множества.",
                "Сетевые СУБД – поддерживают древовидную организацию информации. Связи между записями выражаются в виде отношений предок/потомок, а у каждой записи есть ровно одна родительская запись.",
                "Сетевые СУБД – В этой модели база данных представляет собой централизованное хранилище таблиц, обеспечивающее безопасный одновременный доступ к информации со стороны многих пользователей.",
                "Нет правильного ответа."}
        ));
        tests.add(new Test(
                "Что такое реляционные СУБД?",
                new String[]{"Реляционные СУБД – В этой модели база данных представляет собой централизованное хранилище таблиц, обеспечивающее безопасный одновременный доступ к информации со стороны многих пользователей.",
                "Реляционные СУБД – поддерживают древовидную организацию информации. Связи между записями выражаются в виде отношений предок/потомок, а у каждой записи есть ровно одна родительская запись.",
                "Реляционные СУБД – Сетевая модель расширяет иерархическую модель СУБД, позволяя группировать связи между записями в множества.",
                "Все ответы правильные."}
        ));
        tests.add(new Test(
                "Что такое ограничения целостности?",
                new String[]{"Все ответы правильные.",
                "Ограничения – это правила, применимые во время или после создания таблиц, распространяемые на то, как эти таблицы могут заполняться.",
                "Ограничения целостности представляют собой утверждения о допустимых значениях отдельных информационных единиц и связях между ними.",
                "Ограничение целостности устанавливает правила на уровне БД, определяя набор проверок для таблиц системы. Эти проверки автоматически выполняются всякий раз, когда вызывается оператор вставки, модификации или удаления данных в таблице."
                }
        ));
        tests.add(new Test(
                "С помощью какого техники устраняется  проявляющие угрозы в структурно-функциональном подходе при наличии большого количества пользователей (субъектов) и объектов информационных систем (баз данных)?",
                new String[]{"техника пользователей",
                "техника рабочей группы",
                "техника связанность"}
        ));

        variants.add(new Variant("Вариант 1", tests, answers1));

        // Вариант 2
        ArrayList<Test> tests2 = new ArrayList<>();

        tests2.add(new Test(
                "Каких пользователей объединяет рабочая группа?",
                new String[]{
                        "близкие параметры конфиденциальности по отношению к общим данным",
                        "близкие параметры к достоверности по отношению к общим данным",
                        "пользователи которые есть в специальном списке"}
        ));
        tests2.add(new Test(
                "Каждой пользователь обязательно ….",
                new String[]{
                        "должен быть членом каждого рабочего группы",
                        "должен быть структурно-функциональное характеристика",
                        "должен быть членом какого-либо рабочего группы"}
        ));
        tests2.add(new Test(
                "В процессе БД технологии  рабочих групп как    пользователи и  рабочие группы?",
                new String[]{
                        "с одинаковами значками",
                        "с любым значком",
                        "для каждого определяется отделный знак"}
        ));
        tests2.add(new Test(
                "Каким способам проводиться проектирование системы доступа на основе технологии рабочих групп?",
                new String[]{
                        "«сверху» (дедуктивно)",
                        "«снизу» (индуктивно)",
                        "«сверху» (дедуктивно) и «снизу» (индуктивно)"}
        ));
        tests2.add(new Test(
                "Какие действия первоначально проводится в дедуктивном методе?",
                new String[]{
                        "анализа функциональной структуры",
                        "организационной иерархии пользователей (субъектов) формируются рабочие группы и осуществляются групповые назначения доступа",
                        "варианты А и Б" }
        ));
        tests2.add(new Test(
                "Какие действия первоначально проводится в индуктивном способе?",
                new String[]{
                        "осуществляются индивидуальные назначения доступа субъектов (пользователей) к объектам",
                        "соотношение между объектами и субъектами",
                        "структура функционального анализа" }
        ));
        tests2.add(new Test(
                "Дополнительным организационным способом повышения надежности и безопасности в процессе администрирования и сопровождения системы является разделение …",
                new String[]{
                        "общего администрирования",
                        "администрирования безопасности",
                        "варианты А и Б" }
        ));
        tests2.add(new Test(
                "Общий администратор каких информационных инфраструктуры системы строит, поддерживает и управляет?",
                new String[]{
                        "информационно-логическая схема, категорирование конфиденциальности объектов (ресурсов и устройств)",
                        "интерфейсные и диалоговые элементы, формы, библиотеки запросов, словарно-классификационная база",
                        "резервирование и архивирование данных",
                        "все варианты правильны"}
        ));
        tests2.add(new Test(
                "Администратор безопасности каких системах разграничения доступа организует и управляет?",
                new String[]{
                        "доверительные характеристики (допуска) пользователей",
                        "конкретные назначения доступа",
                        "регистрация и формирование меток доступа пользователей",
                        "все варианты правильны"}
        ));
        tests2.add(new Test(
                "К числу основных принципов создания и функционирования распределённых баз данных не относится?",
                new String[]{
                        "Прозрачность расположения данных",
                        "Изолированность расположения данных",
                        "Центральная установка",
                        "Синхронизация и согласованность"}
        ));
        tests2.add(new Test(
                "Какая директива отменяет установленные ранее привилегии?",
                new String[]{
                        "GRANT",
                        "REVOKE",
                        "SELECTION",
                        "Все ответы верны"}
        ));
        tests2.add(new Test(
                "Технология «Клиент-сервер» отступают от:",
                new String[]{
                        "Отсутствия центральной установке",
                        "Синхронизации",
                        "Модели",
                        "А и С"}
        ));
        tests2.add(new Test(
                "Основные идеи лежащие в основе «Клиент-серверных» технологии:",
                new String[]{
                        "Общие для всех пользователей данных на одном или нескольких серверах",
                        "Иного пользователей на различных вычислительных установках совместно обрабатывающих общие данные",
                        "Поочерёдное обрабатывание общих данных",
                        "А и В"}
        ));
        tests2.add(new Test(
                "Любая система, процесс, компьютер, пользователь запрашивающие у сервера какой-либо ресурс, пользующиеся каким-либо ресурсом и обслуживаемые сервером иным способом называется…?",
                new String[]{
                        "Сервер",
                        "Клиент",
                        "Модель",
                        "Клиент-сервер"}
        ));
        tests2.add(new Test(
                "На какие компоненты разделены структуры СУБД:",
                new String[]{
                        "Компоненты представления",
                        "Прикладной компонент",
                        "Компонент доступа к данным",
                        "Все ответы верны"}
        ));

        variants.add(new Variant("Вариант 2", tests2, answers2));

        // Вариант 2
        ArrayList<Test> tests3 = new ArrayList<>();

        tests3.add(new Test(
                "Какая модель в схеме 3-х компонентов не входит в технологии «Клиент сервер»?",
                new String[]{
                        "Модель файлового сервера",
                        "Модель сервера базы данных",
                        "Модель сервера приложении",
                        "Математическая модель"}
        ));
        tests3.add(new Test(
                "Суть какой модели заключается в переносе прикладного модели АИС, на специализированной в отношении повышенных ресурсов по быстродействию дополнительной сервер системы?",
                new String[]{
                        "AS",
                        "DBS",
                        "RDA",
                        "ODBC"}
        ));
        tests3.add(new Test(
                "Какие модели по критерию звеньев системы называют двухзвенными?",
                new String[]{
                        "AS",
                        "ODBC",
                        "DBS -AS",
                        "RDA -DBS"}
        ));
        tests3.add(new Test(
                "Какая модель называется трёхзвенной?",
                new String[]{
                        "DBS",
                        "RDA -DBS",
                        "AS",
                        "RDA"}
        ));
        tests3.add(new Test(
                "К числу издержек относятся:",
                new String[]{
                        "Потерянные изменения",
                        "«Грязные» данные",
                        "Неповторяющиеся чтения",
                        "Все ответы верны"}
        ));
        tests3.add(new Test(
                "Когда две транзакции одновременно изменяют один и тот же объект базы данных возникают…?",
                new String[]{
                        "«Грязные» данные",
                        "Потерянные изменения",
                        "Неповторяющиеся чтения",
                        "Сериализации"}
        ));
        tests3.add(new Test(
                "Укажите основные режимы захватов в первом подходе сериализации транзакций:",
                new String[]{
                        "Совместный режим",
                        "Временной режим",
                        "Монопольный режим",
                        "А и С"}
        ));
        tests3.add(new Test(
                "Существенный недостаток синхронизационных захватов:",
                new String[]{
                        "Отсутствие тупиков",
                        "Разрушение тупиков",
                        "Тупиковые ситуации",
                        "Все ответы верны"}
        ));
        tests3.add(new Test(
                "Как называется подкаталог операционной системе Windows?",
                new String[]{
                        "DDL",
                        "ODBC",
                        "DBC",
                        "AS"}
        ));
        tests3.add(new Test(
                "По средством каких файлов в операционной системы Windows реализуется драйверы ODBC?",
                new String[]{
                        "DDL",
                        "RDA",
                        "AS",
                        "Все ответы верны"}
        ));
        tests3.add(new Test(
                "Особую копию базы данных для размещения на другом компьютере сети с целью автономной работы пользователей с одинаковыми данными общего пользования называют?",
                new String[]{
                        "Синхронизацией",
                        "Репликой",
                        "Передачей",
                        "Сервером"}
        ));
        tests3.add(new Test(
                "На каких принципах основывается обеспечение согласованного состояния общих данных?",
                new String[]{
                        "Принцип непрерывного размножения обновлений",
                        "Принцип отложенных обновлений",
                        "Принцип неотлаженных обновлений",
                        "А и В"}
        ));
        tests3.add(new Test(
                "Накопленные в какой-либо реплике изменения данных специальной командой пользователя направляются для обновления всех остальных реплик систем. Как называется такая операция?",
                new String[]{
                        "Синхронизация реплик",
                        "Асинхронизация реплик",
                        "Поочередная реплик",
                        "Поэтапное реплик"}
        ));
        tests3.add(new Test(
                "Дайте определение так называемой технике GUID",
                new String[]{
                        "Гибкость уникальных информационных данных",
                        "Глобальный уникальный идентификатор",
                        "Главная уникальная информация данных",
                        "Глобальная уникальная информация данных"}
        ));
        tests3.add(new Test(
                "База данных, содержащая ограниченное подмножества записей полной реплики называется?",
                new String[]{
                        "Частичной репликой",
                        "Поэтапной репликой",
                        "Синхронной репликой",
                        "Поочередной репликой"}
        ));

        variants.add(new Variant("Вариант 3", tests3, answers3));

        variants.add(new Variant("Вариант 4", tests, answers1));
        variants.add(new Variant("Вариант 5", tests2, answers2));
        variants.add(new Variant("Вариант 6", tests3, answers3));

        variants.add(new Variant("Вариант 7", tests, answers1));
        variants.add(new Variant("Вариант 8", tests2, answers2));
        variants.add(new Variant("Вариант 9", tests3, answers3));

        return variants;
    }

}
